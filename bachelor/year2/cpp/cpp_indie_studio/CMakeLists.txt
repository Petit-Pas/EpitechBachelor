cmake_minimum_required(VERSION 3.10)
project(cpp_indie_studio)

set(CMAKE_CXX_STANDARD 14)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
find_package(Threads REQUIRED)
find_package(Irrlicht REQUIRED)
find_package(IrrKlang REQUIRED)

if (NOT WIN32)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -W -Wall -Wextra -g")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wextra")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -W -Wall -Wextra")
else ()
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
endif ()

include_directories(src/client)
include_directories(src/client/entities)
include_directories(src/client/menu)
include_directories(src/shared/network)
include_directories(src/server)
include_directories(src/server/entities)
include_directories(src/server/menu)
include_directories(src/shared/types)
file(GLOB_RECURSE CLIENT_SOURCES ./src/client/*.cpp ./src/shared/network/*.cpp ./src/shared/types/*.cpp)
file(GLOB_RECURSE CLIENT_INCLUDES ./src/client/*.hpp ./src/shared/network/*.hpp ./src/shared/types/*.hpp)

file(GLOB_RECURSE SERVER_SOURCES ./src/server/*.cpp ./src/shared/network/*.cpp ./src/shared/types/*.cpp)
file(GLOB_RECURSE SERVER_INCLUDES ./src/server/*.hpp ./src/shared/network/*.hpp ./src/shared/types/*.hpp)

if (WIN32)
    add_definitions(-DRESOURCE_DIR="./resource/")
else ()
    add_definitions(-DRESOURCE_DIR="${PROJECT_SOURCE_DIR}/resource/")
endif ()
add_definitions(-D_IRR_STATIC_LIB_)
include_directories(SYSTEM ${IRRKLANG_INCLUDE_DIRS})
include_directories(SYSTEM ${IRRLICHT_INCLUDE_DIRS})
add_executable(bomberman ${CLIENT_SOURCES} ${CLIENT_INCLUDES})

if (WIN32)
    target_link_libraries(bomberman wsock32)
endif ()
target_link_libraries(bomberman ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(bomberman ${IRRLICHT_LIBRARIES})
target_link_libraries(bomberman ${IRRKLANG_LIBRARIES})
set_target_properties(bomberman PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")

if (NOT WIN32)
    add_executable(bomberman_server ${SERVER_SOURCES} ${SERVER_INCLUDES})
    target_link_libraries(bomberman_server ${CMAKE_THREAD_LIBS_INIT})
    set_target_properties(bomberman_server PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
    install(TARGETS bomberman DESTINATION ${PROJECT_SOURCE_DIR})
    install(TARGETS bomberman_server DESTINATION ${PROJECT_SOURCE_DIR})
endif ()
