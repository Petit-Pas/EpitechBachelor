cmake_minimum_required(VERSION 3.10)
project(pbrain-gomoku)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}/../bin)

if (NOT WIN32)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -W -Wall -Wextra -g -Iinclude")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wextra -Iinclude")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -W -Wall -Wextra
     -Iinclude -O3")
else ()
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2")
endif ()

include_directories("${CMAKE_SOURCE_DIR}/includes")

file(GLOB_RECURSE ENGINE_INCLUDES ${CMAKE_SOURCE_DIR}/src/*.h*)
file(GLOB_RECURSE ENGINE_SOURCES ${CMAKE_SOURCE_DIR}/src/*.cpp)

FOREACH(SOURCE_FILE IN ITEMS ${ENGINE_SOURCES})
  GET_FILENAME_COMPONENT(SOURCE_FILE_PATH "${SOURCE_FILE}" PATH)
  FILE(RELATIVE_PATH SOURCE_FILE_RELATIVE_PATH "${CMAKE_SOURCE_DIR}" "${SOURCE_FILE_PATH}")
  STRING(REPLACE "/" "\\" GROUP_PATH "${SOURCE_FILE_RELATIVE_PATH}")
  SOURCE_GROUP("${GROUP_PATH}" FILES "${SOURCE_FILE}")
ENDFOREACH()

FOREACH(SOURCE_FILE IN ITEMS ${ENGINE_INCLUDES})
  GET_FILENAME_COMPONENT(SOURCE_FILE_PATH "${SOURCE_FILE}" PATH)
  FILE(RELATIVE_PATH SOURCE_FILE_RELATIVE_PATH "${CMAKE_SOURCE_DIR}" "${SOURCE_FILE_PATH}")
  STRING(REPLACE "/" "\\" GROUP_PATH "${SOURCE_FILE_RELATIVE_PATH}")
  SOURCE_GROUP("${GROUP_PATH}" FILES "${SOURCE_FILE}")
ENDFOREACH()

add_executable(pbrain-LILLE-hoffman.benoit ${ENGINE_SOURCES} ${ENGINE_INCLUDES})
